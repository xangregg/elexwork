Names Default To Here( 1 );// Clean each contest CSV file, but recoding known garbled values.// Compute a Ward and Town field for each precinct to help with subtotal validation.// Compute a "summary" flag to indicate the count is a subtotal of other counts.// Stack the choice columns into a pair of columns, one row per choice.// Combine all the stacked tables into a single table.// Add computed columns for running sums, which can be validated against the// provided summary columns.// Create a summary table for validation with computed diff and compare columns.// Add a graph script to that table for a visual quality check.workdir = "work";base file name = "20161108__nj__general__hudson__county";nh = 24;For( ih = 1, ih <= nh, ih++,	dt = Open( workdir || "/" || "contest" || Substr( Char( 100 + ih ), 2 ) || "." || base file name || ".csv");// fix-up observed errors in precinct names	dt << Begin Data Update;	dc1 = New Column( "precinct 2", "Character" );	dt << Go to( dc1 );	dt << Move Selected Columns( after( :precinct ) );	For Each Row(		:precinct2 = Match( :precinct,			"Ballots CastBa yonne W1 D16", "Bayonne W1 D16",			"Ballots CastJersey City WF D17", "Jersey City WF D17",			"Ballots CastJersey City Ward A", "Jersey City Ward A",			"Bayonne Ballots Cast", "Bayonne",			"Bill Pascrell Jr.Kearny W3 D9", "Kearny W3 D9",			"Charles RyanBayonne W1 D7", "Bayonne W1 D7",			"Charles RyanBayonne W3 D19", "Bayonne W3 D19",			"Dan DelaneyNorth Bergen W1 D1", "North Bergen W1 D1",			"Hoboken Albio Sires", "Hoboken",			"Jersey City Ward B (10th Personal ChoiceCong) Prov", "Jersey City Ward B (10th Cong) Prov",			"Jersey City Ward B (10thCong) Mail-In", "Jersey City Ward B (10th Cong) Mail-In",			"Jersey City Ward B (10thCong) Prov", "Jersey City Ward B (10th Cong) Prov",			"Jersey City Ward B (10thCong) ProvPersonal Choice", "Jersey City Ward B (10th Cong) Prov",			"Jersey City Ward B (10thCong) ProvRegistered", "Jersey City Ward B (10th Cong) Prov",			"Jersey City Ward B (8th Cong)Mail-In", "Jersey City Ward B (8th Cong) Mail-In",			"Jersey City Ward B (8th Cong)ProvBallots Cast", "Jersey City Ward B (8th Cong) Prov",			"Jersey City Ward D Registered", "Jersey City Ward D",			"Jersey City Yes", "Jersey City",			"Kathy O'ConnellSecaucus W2 D4", "Secaucus W2 D4",			"Kearny Personal Choice", "Kearny",			"Lourdes P. GomezGuttenberg W1 D4", "Guttenberg W1 D4",			"Omar SalgadoWest New York W1 D3", "West New York W1 D3",			"Pablo OliveraBayonne W1 D7", "Bayonne W1 D7",			"Pablo OliveraJersey City WD D17", "Jersey City WD D17",			"Personal ChoiceBayonne W1 D7", "Bayonne W1 D7",			"Personal ChoiceBayonne W3 D19", "Bayonne W3 D19",			"Personal ChoiceJersey City WA D13", "Jersey City WA D13",			"Personal ChoiceJersey City WB D26", "Jersey City WB D26",			"RegisteredJersey City WA D21", "Jersey City WA D21",			"RegisteredJersey City WA D30", "Jersey City WA D30",			"Turnout (%)Jersey City Ward B (8th Cong)Mail-In", "Jersey City Ward B (8th Cong) Mail-In",			:precinct		)	);	dt << End Data Update;// some rows in the table represent subtotals of previous rows	dt << Begin Data Update;	dc1 = New Column( "Calculated", "Nominal" );	dt << Go to( dc1 );	dt << Move Selected Columns( after( :precinct 2 ) );	For Each Row(		:calculated = If(			:precinct 2 == "Contest", 2,			Contains(				{"Contest", "Jersey City", "Hoboken", "Bayonne", "North Bergen", "Union City",				"Jersey City Ward E", "Jersey City Ward F", "Jersey City Ward A", "West New York",				"Jersey City Ward B", "Jersey City Ward C", "Jersey City Ward D", "Kearny", "Bayonne Ward 1",				"Bayonne Ward 3", "Secaucus", "Bayonne Ward 2", "Weehawken", "West New York Ward 3",				"West New York Ward 1", "Hoboken Ward 2", "Hoboken Ward 5", "West New York Ward 2",				"Hoboken Ward 4", "Hoboken Ward 3", "Harrison", "Hoboken Ward 1", "Kearny Ward 3",				"North Bergen Ward 5", "Hoboken Ward 6", "Guttenberg Ward 1", "Guttenberg",				"North Bergen Ward 1", "Kearny Ward 4", "Union City Ward 1", "North Bergen Ward 6",				"North Bergen Ward 4", "North Bergen Ward 7", "North Bergen Ward 2", "Kearny Ward 1",				"North Bergen Ward 3", "Union City Ward 3", "Secaucus Ward 2", "Union City Ward 9",				"Secaucus Ward 1", "Secaucus Ward 3", "Kearny Ward 2", "Weehawken Ward 1", "Union City Ward 7",				"Weehawken Ward 2", "Union City Ward 5", "Union City Ward 6", "Union City Ward 4",				"Weehawken Ward 3", "Union City Ward 2", "Union City Ward 8", "Harrison Ward 2",				"Harrison Ward 3", "Harrison Ward 4", "Harrison Ward 1", "East Newark Ward 1", "East Newark",				"Union City Ward 10", "Bayonne Mail & Prov", "East Newark Mail & Prov",				"Guttenberg Mail & Prov", "Harrison Mail & Prov", "Hoboken Mail & Prov",				"Jersey City Mail & Prov", "Kearny Mail & Prov", "North Bergen Mail & Prov",				"Secaucus Mail & Prov", "Union City Mail & Prov", "Weehawken Mail & Prov",				"West New York Mail & Prov", "Federal Overseas", "Unassigned SubDistrict"},				:precinct 2			), 1,			0		)	);	dt << End Data Update;	// group by ward for subtotal checking	dt << Begin Data Update;	dc1 = New Column( "Ward", "Character", );	dt << Go to( dc1 );	dt << Move Selected Columns( after( :precinct 2 ) );	For Each Row(		s = Regex( :precinct 2, "^(.+) W([0123456789ABCDEFG]+) .+$", "\1 Ward \2" );		If( Is Missing( s ),			s = Regex( :precinct 2, "^(.+) Mail-In$", "\1 Mail & Prov" )		);		If( Is Missing( s ),			s = Regex( :precinct 2, "^(.+) Mail-in$", "\1 Mail & Prov" )		);		If( Is Missing( s ),			s = Regex( :precinct 2, "^(.+[^&]) Prov$", "\1 Mail & Prov" )		);		If( Is Missing( s ),			s = :precinct 2		);		:Ward = s;	);	dt << End Data Update;	dt << Begin Data Update;	dc1 = New Column( "Town", "Character" );	dt << Go to( dc1 );	dt << Move Selected Columns( after( :Ward ) );	For Each Row(		:Town = Match( :Ward,			"Bayonne 10th Cong Mail & Prov", "Bayonne",			"Bayonne 8th Cong Mail & Prov", "Bayonne",			"Bayonne Mail & Prov", "Bayonne",			"Bayonne Ward 1", "Bayonne",			"Bayonne Ward 2", "Bayonne",			"Bayonne Ward 3", "Bayonne",			"East Newark Mail & Prov", "East Newark",			"East Newark Ward 1", "East Newark",			"Guttenberg Mail & Prov", "Guttenberg",			"Guttenberg Ward 1", "Guttenberg",			"Harrison Mail & Prov", "Harrison",			"Harrison Ward 1", "Harrison",			"Harrison Ward 2", "Harrison",			"Harrison Ward 2 Mail & Prov", "Harrison",			"Harrison Ward 3", "Harrison",			"Harrison Ward 4", "Harrison",			"Hoboken Mail & Prov", "Hoboken",			"Hoboken Ward 1", "Hoboken",			"Hoboken Ward 2", "Hoboken",			"Hoboken Ward 3", "Hoboken",			"Hoboken Ward 4", "Hoboken",			"Hoboken Ward 5", "Hoboken",			"Hoboken Ward 6", "Hoboken",			"Jersey City 10th Cong Mail & Prov", "Jersey City",			"Jersey City 8th Cong Mail & Prov", "Jersey City",			"Jersey City Mail & Prov", "Jersey City",			"Jersey City Ward A", "Jersey City",			"Jersey City Ward B", "Jersey City",			"Jersey City Ward B (10th Cong) Mail & Prov", "Jersey City",			"Jersey City Ward B (8th Cong) Mail & Prov", "Jersey City",			"Jersey City Ward C", "Jersey City",			"Jersey City Ward D", "Jersey City",			"Jersey City Ward E", "Jersey City",			"Jersey City Ward F", "Jersey City",			"Kearny 8th Cong Mail & Prov", "Kearny",			"Kearny 9th Cong Mail & Prov", "Kearny",			"Kearny Mail & Prov", "Kearny",			"Kearny Ward 1", "Kearny",			"Kearny Ward 2", "Kearny",			"Kearny Ward 3", "Kearny",			"Kearny Ward 4", "Kearny",			"North Bergen Mail & Prov", "North Bergen",			"North Bergen Ward 1", "North Bergen",			"North Bergen Ward 2", "North Bergen",			"North Bergen Ward 3", "North Bergen",			"North Bergen Ward 4", "North Bergen",			"North Bergen Ward 5", "North Bergen",			"North Bergen Ward 6", "North Bergen",			"North Bergen Ward 7", "North Bergen",			"Overseas Ballot 10th Cong", "Federal Overseas",			"Overseas Ballot 8th Cong", "Federal Overseas",			"Overseas Ballot 9th Cong", "Federal Overseas",			"Secaucus Mail & Prov", "Secaucus",			"Secaucus Ward 1", "Secaucus",			"Secaucus Ward 2", "Secaucus",			"Secaucus Ward 3", "Secaucus",			"Union City Mail & Prov", "Union City",			"Union City Ward 1", "Union City",			"Union City Ward 10", "Union City",			"Union City Ward 2", "Union City",			"Union City Ward 3", "Union City",			"Union City Ward 4", "Union City",			"Union City Ward 5", "Union City",			"Union City Ward 6", "Union City",			"Union City Ward 7", "Union City",			"Union City Ward 8", "Union City",			"Union City Ward 9", "Union City",			"Weehawken Mail & Prov", "Weehawken",			"Weehawken Ward 1", "Weehawken",			"Weehawken Ward 2", "Weehawken",			"Weehawken Ward 3", "Weehawken",			"Weekawken Mail & Prov", "Weehawken",			"West New York Mail & Prov", "West New York",			"West New York Ward 1", "West New York",			"West New York Ward 2", "West New York",			"West New York Ward 3", "West New York",			:Ward		)	);	dt << End Data Update;	dt << save( workdir || "/" || "contest" || Substr( Char( 100 + ih ), 2 ) || "." || base file name || ".jmp" );	nc = N Col( dt );	stack cmd = "dt2 = dt << Stack(	columns( :registered, :ballots";	For( ic = 12, ic <= nc, ic++,		If( (Column( dt, ic ) << get data type()) == "Character",			ss = Sort List( dt[0, ic] );			If( ss[1] == "" & ss[N Items( ss )] == "",				Column( dt, ic ) << set data type( "Numeric" );				Column( dt, ic ) << set modeling type( "Continuous" );			,				Throw( "unexpected character content in column " || (Column( dt, ic ) << get name()) )			);		);		stack cmd ||= ", :Name(\!"" || (Column( dt, ic ) << get name()) || "\!")";	);	stack cmd ||= "\[), Source Label Column( "choice" ), Stacked Data Column( "count" ) )]\";	dt2 = Eval( Parse( stack cmd ) );	For Each Row( dt2, If( Is Missing( :count ), :count = 0 ) );	dt2 << save( workdir || "/" || "stacked" || Substr( Char( 100 + ih ), 2 ) || "." || base file name || ".jmp" );	Close( dt ););dt3 = Data Table( "stacked01.20161108__nj__general__hudson__county.jmp" ) <<Concatenate(	Data Table( "stacked02.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked03.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked04.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked05.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked06.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked07.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked08.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked09.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked10.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked11.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked12.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked13.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked14.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked15.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked16.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked17.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked18.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked01.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked19.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked20.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked21.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked22.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked23.20161108__nj__general__hudson__county.jmp" ),	Data Table( "stacked24.20161108__nj__general__hudson__county.jmp" ));dt3 << New Column( "Ward Count",	Formula( Col Cumulative Sum( :count, :contest, :choice, :Calculated, :Town, :Ward ) ));dt3 << New Column( "Town Count",	Formula( Col Cumulative Sum( :count, :contest, :choice, :Calculated, :Town ) ));dt3 << New Column( "Contest Count", Formula( Col Cumulative Sum( :count, :contest, :choice, :Calculated ) ) );dt3 << save( workdir || "/" || "all_stacked." || base file name || ".jmp" );Close All( "Data Tables" );Open( workdir || "/" || "all_stacked." || base file name || ".jmp" );dt4 = Data Table( "all_stacked.20161108__nj__general__hudson__county.jmp" ) <<Summary(	Group( :contest, :choice ),	Sum( :count ),	Subgroup( :Calculated ),	Freq( "None" ),	Weight( "None" ),	Link to original data table( 0 ));dt4 << New Column( "diff", Formula( :Name( "Sum(count, 0)" ) - :Name( "Sum(count, 2)" ) ) );dt4 << New Column( "Compare", Character, Formula( If( :diff == 0, "Equal", :diff > 0, "Higher", "Lower" ) ) );dt4 << Add Properties to Table(	{New Script(		"treemap",		Graph Builder(			Size( 716, 501 ),			Show Control Panel( 0 ),			Variables(				X( :contest ),				X( :choice, Position( 1 ) ),				Color( :diff ),				Size( :Name( "Sum(count, 0)" ) )			),			Elements( Treemap( X( 1 ), X( 2 ), Legend( 3 ), Layout( "Squarify" ), Group Labels( "None" ) ) ),			Local Data Filter(				Add Filter(					columns( :choice ),					Where(						:choice == {"Aaron Walter Fraser", "Adam Parkinson", "Agha Khan", "Albio Sires",						"Alex Navas", "Angel L. Valentin", "Asmaa Abdalla", "Barbara Cifelli-Sherry",						"Bernadette McDonald", "Bill Pascrell Jr.", "Carol R. Cruden", "Castle/Bradley",						"Charles F. Tighe", "Charles Ryan", "Chris L. Gadsden", "Clinton/Kaine", "Dan Delaney",						"David H. Pinckney", "David Morel", "De La Fuente/Steinberg", "Denis F. Wilbeck",						"Diane Coleman", "Diego Rivera", "Donald M. Payne Jr.", "Eleanor Villalta",						"Elsa A. Schwarz", "Francis Chipper Benway", "Frank X. Schillari", "George A. Zapata",						"George J. Vinc Jr.", "Gina Irizarry", "Gina Verdibello", "Hector L. Castillo",						"Irene Sbolov", "Jack A. McStowe", "Jason Aydelott", "Jeff Boss", "Jennifer A. Evans",						"Jennifer Rossini", "Jessica Nelson", "Joanne Miller", "John Gerbasio",						"John J. Hallanan III", "John Milan Sebik", "John R. Cupo", "John Smith",						"Johnson/Weld", "Jose A. Silva", "Jose M. Alcantara", "Juan Carlos Alvarado",						"Kathy O'Connell", "Kennedy/Hart", "Kimberly Goycochea", "La Riva/Puryear",						"Lekendrick Shaw", "Leonard R. Kantor", "Lourdes P. Gomez", "Luis Felipe Fernandez",						"Maria Valado", "Marisol Montanez", "Mark Borchert", "Mark R. Rogers", "Mark Rowan",						"Mary Jane Desmond", "Matthew Schapiro", "Melinda Saunders", "Michael J. Alonso",						"Moorehead/Lily", "Mussab Ali", "Natalia Ioffe", "No", "Omar Salgado", "Pablo Olivera",						"Personal Choice", "Ronald C. Scheurle", "Samantha Paris", "Sharma L. Montgomery",						"Sharon Dellafave", "Sheillah Dallara", "Stein/Baraka", "Steven Kilawattie",						"Sudhan Thoms", "Theresa Andryszczak", "Tom A. Troyer", "Trump/Pence",						"Wayne D. Zitt Jr.", "William Hokien", "Yes"}					),					Display( :choice, Size( 160, 225 ), List Display )				)			),			SendToReport(				Dispatch(					{},					"400",					ScaleBox,					{Legend Model(						3,						Properties(							0,							{gradient(								{Color Theme( "Magma" ), Scale Values( [. 10] ),								Label Format( "Fixed Dec", 12, 0 ), N Labels( 2 )}							)}						)					)}				)			)		)	)});dt4 << Add Properties to Table(	{New Script(		"Quality",		Graph Builder(			Size( 651, 500 ),			Show Control Panel( 0 ),			Variables(				X(					Transform Column(						"Rank[choice][contest]",						Character,						Formula( Col Rank( :choice, :contest ) )					)				),				Y( :contest, Order By( :Name( "Sum(count, 0)" ), Ascending, Order Statistic( "Sum" ) ) ),				Color( :Compare )			),			Elements( Points( X, Y, Legend( 4 ) ) ),			SendToReport(				Dispatch( {}, "Rank[choice][contest]", ScaleBox, {Min( 0.4224806 )} ),				Dispatch(					{},					"400",					ScaleBox,					{Legend Model(						4,						Level Name( 1, "Too high" ),						Level Name( 2, "Too low" ),						Properties( 0, {Line Color( -9737364 ), Marker( "FilledSquare" ), Marker Size( 8 )} ),						Properties( 1, {Line Color( 3 ), Marker( "FilledSquare" ), Marker Size( 6 )} ),						Properties( 2, {Line Color( 5 ), Marker( "FilledSquare" ), Marker Size( 6 )} )					)}				),				Dispatch(					{},					"graph title",					TextEditBox,					{Set Font Size( 16 ), Set Font Style( "Plain" ), Set Text(						"Comparing computed totals with reported totals for each contest and candidate"					)}				),				Dispatch( {}, "X title", TextEditBox, {Set Text( "" )} ),				Dispatch( {}, "Y title", TextEditBox, {Set Text( "" )} ),				Dispatch(					{},					"400",					LegendBox,					{Set Title( "Result" ), Legend Position( {4, [1, 0, 2]} ), Position( {1, 0, 2} )}				)			)		);	)});dt4 << save( workdir || "/" || "all_stacked_summary." || base file name || ".jmp" );